{"version":3,"sources":["Calculator.js","Keypad.js","Viewer.js","Circle.js","Background.js","App.js","ResetStyle.js","index.js"],"names":["initialState","number","result","operator","expression","reducer","state","action","type","eval","Calculator","useReducer","dispatch","console","log","Glass","styled","section","StKeypad","div","StKey","button","Keypad","onClickNumber","target","name","onClick","includes","StViewer","Viewer","Number","toLocaleString","StCircle","r","top","bottom","left","right","Circle","children","StBackground","main","Background","App","ResetStyle","createGlobalStyle","reset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.463da9c9.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\nimport styled from 'styled-components';\nimport Keypad from './Keypad';\nimport Viewer from './Viewer';\n\nconst initialState = {\n  number: 0,\n  result: 0,\n  operator: '',\n  expression: '',\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'Number': {\n      return {\n        ...state,\n        number:\n          state.number === 0\n            ? '' + action.number\n            : state.number + action.number,\n        result:\n          state.number === 0\n            ? '' + action.number\n            : state.number + action.number,\n      };\n    }\n    case 'Negative':\n      return {\n        ...state,\n        number: state.number * -1,\n        result: state.number * -1,\n      };\n    case 'Percent':\n      return {\n        ...state,\n        number: state.number / 100,\n        result: state.number / 100,\n      };\n    case 'Dot':\n      return {\n        ...state,\n        number: state.number + '.',\n        result: state.number + '.',\n      };\n\n    case 'Add':\n      return {\n        ...state,\n        number: 0,\n        operator: action.operator,\n        expression: state.expression + state.result + action.operator,\n      };\n    case 'Subtract':\n      return {\n        ...state,\n        number: 0,\n        operator: action.operator,\n        expression: state.expression + state.result + action.operator,\n      };\n    case 'Multiply':\n      return {\n        ...state,\n        number: 0,\n        operator: action.operator,\n        expression: state.expression + state.result + action.operator,\n      };\n    case 'Divide':\n      return {\n        ...state,\n        number: 0,\n        operator: action.operator,\n        expression: state.expression + state.result + action.operator,\n      };\n    case 'Clear':\n      return {\n        ...state,\n        number: 0,\n        result: 0,\n      };\n    case 'Result':\n      return {\n        ...state,\n        number: 0,\n        result: eval(state.expression + state.number),\n        operator: '',\n        expression: '',\n      };\n    default:\n      return state;\n  }\n};\n\nconst Calculator = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  console.log(state);\n  return (\n    <Glass>\n      <Viewer state={state} />\n      <Keypad state={state} dispatch={dispatch} />\n    </Glass>\n  );\n};\n\nconst Glass = styled.section`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: flex-start;\n  width: 40vw;\n  min-width: 55rem;\n  height: auto;\n  background: linear-gradient(\n    to right bottom,\n    rgba(255, 255, 255, 0.5),\n    rgba(255, 255, 255, 0.3)\n  );\n  border-top: 2px solid rgba(255, 255, 255, 0.5);\n  border-left: 2px solid rgba(255, 255, 255, 0.5);\n  border-radius: 2rem;\n  z-index: 2;\n  backdrop-filter: blur(2rem);\n`;\n\nexport default Calculator;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiPlus, FiMinus, FiDivide, FiPercent } from 'react-icons/fi';\nimport { MdClear } from 'react-icons/md';\nimport { TiEquals } from 'react-icons/ti';\nimport { HiOutlineSwitchVertical } from 'react-icons/hi';\nimport { BsDot } from 'react-icons/bs';\n\nconst Keypad = ({ state, dispatch }) => {\n  const onClickNumber = ({ target }) => {\n    dispatch({ type: 'Number', number: target.name });\n  };\n  const onDot = () => {\n    if (!state.number.includes('.')) {\n      dispatch({ type: 'Dot' });\n    }\n  };\n  const onClickAdd = () => {\n    dispatch({ type: 'Add', operator: '+' });\n  };\n  const onClickSubtract = () => {\n    dispatch({ type: 'Add', operator: '-' });\n  };\n  const onClickMultiply = () => {\n    dispatch({ type: 'Add', operator: '*' });\n  };\n  const onClickDivide = () => {\n    dispatch({ type: 'Add', operator: '/' });\n  };\n  const onClickResult = () => {\n    dispatch({ type: 'Result' });\n  };\n  const onClear = () => {\n    dispatch({ type: 'Clear' });\n  };\n  return (\n    <StKeypad>\n      <StKey onClick={onClear}>C</StKey>\n      <StKey onClick={() => dispatch({ type: 'Negative' })}>\n        <HiOutlineSwitchVertical />\n      </StKey>\n      <StKey onClick={() => dispatch({ type: 'Percent' })}>\n        <FiPercent />\n      </StKey>\n      <StKey name=\"/\" onClick={onClickDivide}>\n        <FiDivide />\n      </StKey>\n      <StKey name=\"7\" onClick={onClickNumber}>\n        7\n      </StKey>\n      <StKey name=\"8\" onClick={onClickNumber}>\n        8\n      </StKey>\n      <StKey name=\"9\" onClick={onClickNumber}>\n        9\n      </StKey>\n      <StKey name=\"*\" onClick={onClickMultiply}>\n        <MdClear />\n      </StKey>\n      <StKey name=\"4\" onClick={onClickNumber}>\n        4\n      </StKey>\n      <StKey name=\"5\" onClick={onClickNumber}>\n        5\n      </StKey>\n      <StKey name=\"6\" onClick={onClickNumber}>\n        6\n      </StKey>\n      <StKey name=\"-\" onClick={onClickSubtract}>\n        <FiMinus />\n      </StKey>\n      <StKey name=\"1\" onClick={onClickNumber}>\n        1\n      </StKey>\n      <StKey name=\"2\" onClick={onClickNumber}>\n        2\n      </StKey>\n      <StKey name=\"3\" onClick={onClickNumber}>\n        3\n      </StKey>\n      <StKey name=\"+\" onClick={onClickAdd}>\n        <FiPlus />\n      </StKey>\n      <StKey name=\"0\" onClick={onClickNumber}>\n        0\n      </StKey>\n      <StKey name=\"000\" onClick={onClickNumber}>\n        000\n      </StKey>\n      <StKey onClick={onDot}>\n        <BsDot />\n      </StKey>\n      <StKey onClick={onClickResult}>\n        <TiEquals />\n      </StKey>\n    </StKeypad>\n  );\n};\n\nconst StKeypad = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  padding: 2rem;\n`;\n\nconst StKey = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 1rem;\n  width: 10rem;\n  height: 10rem;\n  border-radius: 2rem;\n  font-size: 3rem;\n  color: grey;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    border-top: 2px solid rgba(255, 255, 255, 0.5);\n    border-left: 2px solid rgba(255, 255, 255, 0.5);\n    border-radius: 2rem;\n    backdrop-filter: blur(2rem);\n    color: black;\n  }\n`;\n\nexport default Keypad;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Viewer = ({ state }) => {\n  return <StViewer>{Number(state.result).toLocaleString()}</StViewer>;\n};\n\nconst StViewer = styled.div`\n  width: 100%;\n  height: 10rem;\n  margin: 2rem;\n  padding: 2rem;\n  font-size: 8rem;\n  text-align: right;\n`;\n\nexport default Viewer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Circle = ({ r, top, bottom, left, right, children }) => {\n  return (\n    <StCircle r={r} top={top} bottom={bottom} left={left} right={right}>\n      {children}\n    </StCircle>\n  );\n};\n\nconst StCircle = styled.div`\n  background: linear-gradient(\n    to right bottom,\n    rgba(255, 255, 255, 0.8),\n    rgba(255, 255, 255, 0.3)\n  );\n  width: ${({ r }) => r}rem;\n  height: ${({ r }) => r}rem;\n  border-radius: 50%;\n  position: absolute;\n  top: ${({ top }) => top}%;\n  bottom: ${({ bottom }) => bottom}%;\n  left: ${({ left }) => left}%;\n  right: ${({ right }) => right}%;\n`;\n\nexport default Circle;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Calculator from './Calculator';\nimport Circle from './Circle';\n\nconst Background = () => {\n  return (\n    <>\n      <StBackground>\n        <Calculator />\n      </StBackground>\n      <Circle r={20} top={5} right={20} />\n      <Circle r={20} bottom={5} left={20} />\n    </>\n  );\n};\n\nconst StBackground = styled.main`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background: linear-gradient(to right top, #65dfc9, #6cdbeb);\n`;\n\nexport default Background;\n","import React from 'react';\nimport Background from './Background';\n\nfunction App() {\n  return <Background />;\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst ResetStyle = createGlobalStyle`\n  ${reset}\n  *,\n  * & {\n    box-sizing: border-box;\n    user-select: none;\n  }\n  html {\n    font-size: 10px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\n  }\n  ul,ol,li {\n    list-style: none;\n  }\n  button {\n    border: none;\n    background: transparent;\n  }\n  body {\n    ${'' /* background: #000000; */}\n  }\n`;\n\nexport default ResetStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ResetStyle from './ResetStyle';\n\nReactDOM.render(\n  <>\n    <ResetStyle />\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}